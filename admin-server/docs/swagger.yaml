basePath: /
definitions:
  jsonb.JSONB:
    properties:
      data: {}
      valid:
        description: Valid is false if Data is NULL
        type: boolean
    type: object
  types.Import:
    properties:
      has_errors:
        example: false
        type: boolean
      id:
        example: da5554e3-6c87-41b2-9366-5449a2f15b53
        type: string
      is_stored:
        example: false
        type: boolean
      metadata:
        $ref: '#/definitions/jsonb.JSONB'
      num_columns:
        example: 8
        type: integer
      num_error_rows:
        example: 32
        type: integer
      num_processed_values:
        example: 128
        type: integer
      num_rows:
        example: 256
        type: integer
      num_valid_rows:
        example: 224
        type: integer
      rows:
        description: Used for the final step in the onComplete
        items:
          $ref: '#/definitions/types.ImportRowResponse'
        type: array
      upload_id:
        example: 50ca61e1-f683-4b03-9ec4-4b3adb592bf1
        type: string
    type: object
  types.ImportCell:
    properties:
      cell_key:
        example: first_name
        type: string
      cell_value:
        example: Laura
        type: string
      row_index:
        example: 0
        type: integer
    type: object
  types.ImportCellEditResponse:
    properties:
      has_errors:
        example: false
        type: boolean
      num_error_rows:
        example: 32
        type: integer
      num_rows:
        example: 256
        type: integer
      num_valid_rows:
        example: 224
        type: integer
      row:
        $ref: '#/definitions/types.ImportRow'
    type: object
  types.ImportData:
    properties:
      filter:
        type: string
      pagination:
        $ref: '#/definitions/types.Pagination'
      rows:
        items:
          $ref: '#/definitions/types.ImportRow'
        type: array
    type: object
  types.ImportRow:
    properties:
      errors:
        additionalProperties:
          items:
            $ref: '#/definitions/types.ImportRowError'
          type: array
        type: object
      index:
        example: 0
        type: integer
      values:
        additionalProperties:
          type: string
        type: object
    type: object
  types.ImportRowError:
    properties:
      message:
        type: string
      severity:
        type: string
      validate:
        type: string
    type: object
  types.ImportRowResponse:
    properties:
      errors:
        additionalProperties:
          items:
            $ref: '#/definitions/types.ImportRowError'
          type: array
        type: object
      index:
        example: 0
        type: integer
      values:
        additionalProperties: true
        type: object
    type: object
  types.Importer:
    properties:
      template:
        $ref: '#/definitions/types.Template'
    type: object
  types.Pagination:
    properties:
      limit:
        type: integer
      next_offset:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
  types.Res:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  types.Template:
    properties:
      columns:
        items:
          $ref: '#/definitions/types.TemplateColumn'
        type: array
      id:
        example: f0797968-becc-422a-b135-19de1d8c5d46
        type: string
    type: object
  types.TemplateColumn:
    properties:
      data_type:
        example: string
        type: string
      description:
        example: The first name
        type: string
      id:
        example: a1ed136d-33ce-4b7e-a7a4-8a5ccfe54cd5
        type: string
      key:
        example: email
        type: string
      name:
        example: First Name
        type: string
      required:
        example: false
        type: boolean
      suggested_mappings:
        example:
        - first_name
        items:
          type: string
        type: array
      validations:
        items:
          $ref: '#/definitions/types.Validation'
        type: array
    type: object
  types.Upload:
    properties:
      file_extension:
        example: csv
        type: string
      file_name:
        example: example.csv
        type: string
      file_size:
        example: 1024
        type: integer
      file_type:
        example: text/csv
        type: string
      header_row_index:
        example: 0
        type: integer
      id:
        example: 50ca61e1-f683-4b03-9ec4-4b3adb592bf1
        type: string
      is_stored:
        example: false
        type: boolean
      matched_header_row_index:
        example: 0
        type: integer
      metadata:
        example: '{"user_id": 1234}'
        type: string
      sheet_list:
        example:
        - Sheet 1
        items:
          type: string
        type: array
      template:
        allOf:
        - $ref: '#/definitions/types.Template'
        description: Set from the template provided in the SDK
      tus_id:
        example: ee715c254ee61855b465ed61be930487
        type: string
      upload_columns:
        items:
          $ref: '#/definitions/types.UploadColumn'
        type: array
      upload_rows:
        items:
          $ref: '#/definitions/types.UploadRow'
        type: array
    type: object
  types.UploadColumn:
    properties:
      id:
        example: 3c79e7fd-1018-4a27-8b86-9cee84221cd8
        type: string
      index:
        example: 0
        type: integer
      name:
        example: Work Email
        type: string
      sample_data:
        example:
        - test@example.com
        items:
          type: string
        type: array
      suggested_template_column_id:
        example: a1ed136d-33ce-4b7e-a7a4-8a5ccfe54cd5
        type: string
    type: object
  types.UploadColumnMapping:
    properties:
      template_column_id:
        example: a1ed136d-33ce-4b7e-a7a4-8a5ccfe54cd5
        type: string
    type: object
  types.UploadHeaderRowSelection:
    properties:
      index:
        example: 0
        type: integer
    type: object
  types.UploadRow:
    properties:
      index:
        example: 0
        type: integer
      values:
        additionalProperties:
          type: string
        type: object
    type: object
  types.Validation:
    properties:
      id:
        example: 4581
        type: integer
      message:
        example: The cell must contain a value
        type: string
      options:
        example: "true"
        type: string
      severity:
        example: error
        type: string
      validate:
        example: not_blank
        type: string
    type: object
host: localhost:3003
info:
  contact:
    email: support@tableflow.com
    name: TableFlow
    url: https://tableflow.com
  description: The backend file import API of the TableFlow application.
  termsOfService: https://tableflow.com/terms
  title: TableFlow File Import API
  version: "1.2"
paths:
  /file-import/v1/files:
    post:
      description: Creates a new file upload after validating the length and parsing
        the metadata
      responses: {}
      summary: Post file (tus)
      tags:
      - File Import
  /file-import/v1/files/{id}:
    head:
      description: Returns the length and offset for the HEAD request
      parameters:
      - description: tus file ID
        in: path
        name: id
        required: true
        type: string
      responses: {}
      summary: Head file (tus)
      tags:
      - File Import
    patch:
      description: Adds a chunk to an upload, only allowed if enough space in the
        upload is left
      parameters:
      - description: tus file ID
        in: path
        name: id
        required: true
        type: string
      responses: {}
      summary: Patch file (tus)
      tags:
      - File Import
  /file-import/v1/import/{id}/cell/edit:
    post:
      description: Edit the value in a cell for an import. If the cell contains an
        error, it will run it through the validation before allowing the edit.
      parameters:
      - description: Upload ID
        in: path
        name: id
        required: true
        type: string
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.ImportCell'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ImportCellEditResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.Res'
      summary: Edit a cell in an import
      tags:
      - File Import
  /file-import/v1/import/{id}/review:
    get:
      description: Get a single import by the upload ID, including the row data for
        the first page of the review screen if the import is complete
      parameters:
      - description: Upload ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Import'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.Res'
      summary: Get import by upload ID for the review screen
      tags:
      - File Import
  /file-import/v1/import/{id}/rows:
    get:
      description: Paginate import rows by the upload ID of an import
      parameters:
      - description: Upload ID
        in: path
        name: id
        required: true
        type: string
      - description: Pagination offset
        in: query
        minimum: 0
        name: offset
        required: true
        type: integer
      - description: Pagination limit
        in: query
        maximum: 1000
        minimum: 1
        name: limit
        required: true
        type: integer
      - description: Pagination filter
        enum:
        - all
        - valid
        - error
        in: query
        name: filter
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ImportData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.Res'
      summary: Get import rows by upload ID for the review screen
      tags:
      - File Import
  /file-import/v1/import/{id}/submit:
    post:
      description: Submit the reviewed import by the upload ID once the data is reviewed
        and any errors are fixed
      parameters:
      - description: Upload ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Import'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.Res'
      summary: Submit an import by upload ID
      tags:
      - File Import
  /file-import/v1/importer/{id}:
    post:
      description: Get a single importer
      parameters:
      - description: "0"
        in: path
        name: id
        required: true
        type: string
      - description: Request body
        in: body
        name: body
        schema:
          additionalProperties: true
          type: object
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Importer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.Res'
      summary: Get importer
      tags:
      - File Import
  /file-import/v1/upload/{id}:
    get:
      description: Get a single upload by the tus ID provided to the client from the
        upload
      parameters:
      - description: tus ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Upload'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.Res'
      summary: Get upload by tus ID
      tags:
      - File Import
  /file-import/v1/upload/{id}/set-column-mapping:
    post:
      description: Set the template column IDs for each upload column and trigger
        the import
      parameters:
      - description: Upload ID
        in: path
        name: id
        required: true
        type: string
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          additionalProperties:
            $ref: '#/definitions/types.UploadColumnMapping'
          type: object
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Res'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.Res'
      summary: Set upload column mapping and import data
      tags:
      - File Import
  /file-import/v1/upload/{id}/set-header-row:
    post:
      description: Set the header row index on the upload
      parameters:
      - description: Upload ID
        in: path
        name: id
        required: true
        type: string
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.UploadHeaderRowSelection'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Upload'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.Res'
      summary: Set upload header row
      tags:
      - File Import
  /public/health:
    get:
      description: Health check
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Res'
      summary: Health
      tags:
      - Public
swagger: "2.0"
